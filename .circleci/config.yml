aliases:
  _working-directory: &working-directory
    working_directory: ~/project/docker-sphinx-doc
  attach-workspace: &attach-workspace
    attach_workspace:
      at: ~/project
  docker-defaults: &docker-defaults
    docker:
      - image: docker:17.09.1-ce-git
    <<: *working-directory
  docker-node: &docker-node
    docker:
      - image: circleci/node:8
    <<: *working-directory
  persist-to-workspace: &persist-to-workspace
    persist_to_workspace:
      root: ~/project
      paths:
        - docker-sphinx-doc
  persist-docker-images: &persist-docker-images
    persist_to_workspace:
      root: ~/project
      paths:
        - docker-sphinx-doc/docker-images

jobs:
  analyze-pull-request:
    <<: *docker-node
    steps:
      - *attach-workspace
      - run:
          command: |
            if [ -n "${CIRCLE_PULL_REQUEST}" ]; then
              yarn danger ci
            else
              echo "Skipping Pull Request analysis." \
                "Please create a Pull Request to merge your changes."
              exit 1
            fi
          name: Analyze Pull Request
  install:
    <<: *docker-node
    steps:
      - *attach-workspace
      - restore_cache:
          keys:
            - v1-node-{{ .Branch }}-{{ checksum "yarn.lock" }}
            - v1-node-{{ .Branch }}-
            - v1-node-
          name: Restore node_modules cache
      - run:
          command: yarn install --pure-lockfile
          name: Install dependencies
      - save_cache:
          key: v1-node-{{ .Branch }}-{{ checksum "yarn.lock" }}
          name: Save node_modules cache
          paths:
            - node_modules
      - *persist-to-workspace
  build-latest:
    <<: *docker-defaults
    steps:
      - *attach-workspace
      - setup_remote_docker
      - run:
          command: |
            ./bin/image.sh build keimlink/sphinx-doc latest
            ./bin/image.sh test keimlink/sphinx-doc latest
            mkdir -p docker-images
            ./bin/image.sh save keimlink/sphinx-doc latest > docker-images/sphinx-doc_latest.tar
          name: Build and test latest Docker image
      - *persist-docker-images
  build-latex:
    <<: *docker-defaults
    steps:
      - *attach-workspace
      - setup_remote_docker
      - run:
          command: |
            ./bin/image.sh build keimlink/sphinx-doc latex
            ./bin/image.sh test keimlink/sphinx-doc latex
            mkdir -p docker-images
            ./bin/image.sh save keimlink/sphinx-doc latex > docker-images/sphinx-doc_latex.tar
          name: Build and test latex Docker image
      - *persist-docker-images
  checkout:
    <<: *docker-defaults
    steps:
      - *attach-workspace
      - checkout
      - *persist-to-workspace
  eclint:
    <<: *docker-node
    steps:
      - *attach-workspace
      - run:
          command: yarn eclint check  "**" "!*.swp" "!docs/**" "!yarn.lock"
          name: Validate EditorConfig settings
  eslint:
    <<: *docker-node
    steps:
      - *attach-workspace
      - run:
          command: yarn eslint . --ext .js
          name: Check all JavaScript files
  markdownlint:
    <<: *docker-node
    steps:
      - *attach-workspace
      - run:
          command: yarn markdownlint "**.md"
          name: Validate all Markdown files
  push:
    <<: *docker-defaults
    steps:
      - setup_remote_docker
      - *attach-workspace
      - run:
          command: |
            docker login --username ${DOCKER_LOGIN} --password ${DOCKER_PASSWORD}
            docker load < docker-images/sphinx-doc_latest.tar
            ./bin/image.sh push keimlink/sphinx-doc latest
            docker load < docker-images/sphinx-doc_latex.tar
            ./bin/image.sh push keimlink/sphinx-doc latex
          name: Push Docker images to registry
  shellcheck:
    docker:
      - image: koalaman/shellcheck-alpine:v0.4.7
    <<: *working-directory
    steps:
      # ca-certificates package is not installed in shellcheck container.
      # Without this package attach_workspace will fail.
      - checkout
      - run:
          command: find . -name "*.sh" -exec shellcheck {} +
          name: Check all shell scripts
  yamllint:
    docker:
      - image: boiyaa/yamllint:1.8.1
    <<: *working-directory
    steps:
      - *attach-workspace
      - run:
          command: yamllint --strict .yamllint .
          name: Check all YAML files
  yarn-check:
    <<: *docker-node
    steps:
      - *attach-workspace
      - run:
          command: yarn check
          name: Check yarn.lock

version: 2

workflows:
  build-push:
    jobs:
      - analyze-pull-request:
          context: org-global
          filters:
            branches:
              ignore:
                - develop
                - master
          requires:
            - install
      - build-latest:
          requires:
            - analyze-pull-request
            - eclint
            - eslint
            - markdownlint
            - shellcheck
            - yamllint
      - build-latex:
          requires:
            - analyze-pull-request
            - eclint
            - eslint
            - markdownlint
            - shellcheck
            - yamllint
      - checkout
      - eclint:
          requires:
            - install
      - eslint:
          requires:
            - install
      - install:
          requires:
            - checkout
      - markdownlint:
          requires:
            - install
      - shellcheck
      - yamllint:
          requires:
            - checkout
      - push:
          context: org-global
          filters:
            branches:
              only: master
          requires:
            - build-latest
            - build-latex
      - yarn-check:
          requires:
            - install
  version: 2
